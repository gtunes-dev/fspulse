name: CI

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:

jobs:
  build-matrix:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Run Clippy (Linting)
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Run tests
        run: cargo test --verbose

      - name: Build release binary
        run: cargo build --release

      - name: Prepare artifact
        shell: bash
        run: |
          mkdir -p release
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            cp target/release/fspulse.exe release/fspulse-${{ matrix.os }}.exe
          else
            cp target/release/fspulse release/fspulse-${{ matrix.os }}
          fi

      - name: List release directory
        run: ls -la release

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: fspulse-${{ matrix.os }}
          path: release/

  build-windows-arm:
    runs-on: ubuntu-latest
    name: Build Windows ARM Binary
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install Windows ARM target
        run: rustup target add aarch64-pc-windows-msvc

      - name: Run Clippy (Linting)
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Run tests
        run: cargo test --verbose

      - name: Build release binary for Windows ARM
        run: cargo build --release --target=aarch64-pc-windows-msvc

      - name: Prepare artifact for Windows ARM
        shell: bash
        run: |
          mkdir -p release
          cp target/aarch64-pc-windows-msvc/release/fspulse.exe release/fspulse-windows-arm.exe

      - name: List release directory
        run: ls -la release

      - name: Upload Windows ARM artifact
        uses: actions/upload-artifact@v4
        with:
          name: fspulse-windows-arm
          path: release/