// fspulse_query.pest
// interactive parser: https://pest.rs/#editor

// Basic tokens - all silent
WHITESPACE = _{ " " | "\t" | "\n" }
COLON      = _{ ":" }
COMMA      = _{ "," }
DOTDOT     = _{ ".." }
LPAREN     = _{ "(" }
RPAREN     = _{ ")" }

// Top-level query: one of the domain-specific queries
query = { SOI ~ (items_query | scans_query | roots_query | changes_query | paths_query) ~ EOI }

items_where   = @{ "items" ~ WHITESPACE+ ~ "where" ~ WHITESPACE+ }
scans_where   = @{ "scans" ~ WHITESPACE+ ~ "where" ~ WHITESPACE+ }
roots_where   = @{ "roots" ~ WHITESPACE+ ~ "where" ~ WHITESPACE+ }
changes_where = @{ "changes" ~ WHITESPACE+ ~ "where" ~ WHITESPACE+ }
paths_where   = @{ "paths" ~ WHITESPACE+ ~ "where" ~ WHITESPACE+ }

items_query   = { items_where ~ fs_items }
scans_query   = { scans_where ~ fs_scans }
roots_query   = { roots_where ~ fs_roots }
changes_query = { changes_where ~ fs_changes }
paths_query   = { paths_where ~ fs_paths }

// Filter sets for each type (for items, we allow a COMMA-separated list of filters)
fs_items   = _{ fs_items_filter ~ (COMMA ~ fs_items_filter)* }
fs_scans   = _{ fs_scans_filter ~ (COMMA ~ fs_scans_filter)* }
fs_roots   = _{ fs_roots_filter ~ (COMMA ~ fs_roots_filter)* }
fs_changes = _{ fs_changes_filter ~ (COMMA ~ fs_changes_filter)* }
fs_paths   = _{ fs_paths_filter ~ (COMMA ~ fs_paths_filter)* }

// Allowable filters for the various types of queries
fs_items_filter   = _{ filter_change | filter_scan | filter_date | filter_validity | filter_root }
fs_scans_filter   = _{ filter_scan | filter_date }
fs_roots_filter   = _{ WHITESPACE* }
fs_changes_filter = _{ filter_scan | filter_change | filter_validity }
fs_paths_filter   = _{ WHITESPACE* }

// Root filter: e.g., root(1) [TODO: Add path support]
filter_root =  { "root" ~ COLON ~ LPAREN ~ root_values ~ RPAREN }
root_values = _{ root_spec ~ (COMMA ~ root_spec)* }
root_spec   = _{ root_path | root_id }
root_path   =  { "'" ~ (("\\'" | (!"'" ~ ANY)))* ~ "'" }
root_id     = @{ ASCII_DIGIT+ }

// Scan filter: e.g., scan:(32) or scan:(32..36) or scan:(3, 3..5)
filter_scan =  { "scan" ~ COLON ~ LPAREN ~ scan_values ~ RPAREN }
scan_values = _{ scan_spec ~ (COMMA ~ scan_spec)* }
scan_spec   = _{ date_range | scan_range | date | scan_id }
scan_range  =  { scan_id ~ DOTDOT ~ scan_id }
scan_id     = @{ ASCII_DIGIT+ }

// Date filter: e.g., date:(2023-01-01) or date:(2023-01-01..2023-01-31)
// filter_date  =  { "date" ~ COLON ~ LPAREN ~ date_range ~ RPAREN }
filter_date =  { "date" ~ COLON ~ LPAREN ~ date_values ~ RPAREN }
date_values = _{ date_spec ~ (COMMA ~ date_spec)* }

// Change filter: e.g., change:(A) or change:(A,M)
filter_change =  { "change" ~ COLON ~ LPAREN ~ change_values ~ RPAREN }
change_values = _{ change ~ (WHITESPACE* ~ COMMA ~ WHITESPACE* ~ change)* }
change        =  { "A" | "M" | "D" }

// Validity filter: e.g., validity:(V) or validity:(V,I)
filter_validity =  { "validity" ~ COLON ~ LPAREN ~ validity_values ~ RPAREN }
validity_values = _{ validity ~ (WHITESPACE* ~ COMMA ~ WHITESPACE* ~ validity)* }
validity        =  { "V" | "I" | "N" | "U" }

date_spec  = _{ date_range | date }
date_range =  { date ~ DOTDOT ~ date }
date       = @{ ASCII_DIGIT{4} ~ "-" ~ ASCII_DIGIT{2} ~ "-" ~ ASCII_DIGIT{2} }
